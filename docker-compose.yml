
services:
  # Zookeeper service
  CBOE-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: CBOE-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka service
  CBOE-kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: CBOE-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: CBOE-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - CBOE-zookeeper

  # Kafka UI (Optional)
  CBOE-kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: CBOE-kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: CBOE-Kafka-Cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: CBOE-kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: CBOE-zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: 'false'
    depends_on:
      - CBOE-kafka

  # PostgreSQL service
  CBOE-postgres:
    image: postgres:15
    container_name: CBOE-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: user-details
    volumes:
      - CBOE-postgres-data:/var/lib/postgresql/data
    restart: always

networks:
  default:
    name: CBOE-network

volumes:
  CBOE-postgres-data:
